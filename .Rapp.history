is.nan(t)
is.nan(m)
is.nan(l)
is.nan(h)
is.na(i)
is.nan(i)
is.nan(a)
is.nan(b)
is.nan(c)
is.nan(d)
is.nan(e)
is.nan(f)
is.nan(g)
is.nan(h)
is.nan(i)
is.nan(j)
is.nan(k)
is.nan(l)
is.nan(m)
is.nan(n)
is.nan(o)
is.nan(p)
is.nan(q)
is.nan(r)
is.nan(s)
is.nan(t)
is.na(t)
u<-data.frame(gabba=c("a","b","c","d"),hey=c(F,F,F,T),nonny=(2L,3L,5L,7L))
u<-data.frame(gabba=c("a","b","c","d"),hey=c(F,F,F,T),nonny=c(2L,3L,5L,7L))
u
u<-data.frame(gabba=c("a","b","c","d"),hey=c(F,F,F,T),nonny=c(2L,3L,5L,7L),row.names=c("Steve","Chip","Ernie","Pop"))
u
names(u)
dimnames(u)
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1, 9, 3.14)
?c()
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div
my_div<-z/my_sqrt
my_div
c(1, 2, 3, 4)+c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+100
z*2+1000
my_div
p<-vector()
p
p<-vector("numeric",29)
p
3*inf
3*Inf
?attributes
attributes(p)
p
r<-c(7:35)
(p+r)/3
q<-(p+r)/3
q
as.integer(q)
as.complex(q)
t<-1:64
t
dim(t)<c(8,8)
dim(t)<-c(8,8)
t
x<-factor(c("big","little","so-so","little","so-so","big","little","so-so","little","so-so","little","so-so","big","little","so-so")
)
x
table(x)
y<-table(x)
y
y[1]
y[2]
y[3]
y[1,2]
unclass(x)
library(datasets)#
data(iris)
iris
VirginicaLogical<-iris[,5=="virginica"]
VirginicaLogical
VirginicaLogical<-iris[Species=="virginica"]
VirginicaLogical<-iris[iris$Species=="virginica"]
VirginicaTest<-iris[,5]
VirginicaTest
VirginicaTest[VirginicaTest=="virginica"]
VirginicaLogical<-iris[iris[,5]=="virginica"]
VirginicaLogical<-iris[,5]=="virginica"
VirginicaLogical
SepalLengthVirginica<-iris[,1]
SepalLengthVirginica
SepalLengthVirginica<-SepalLengthVirginica[VirginicaLogical]
SepalLengthVirginica
mean(SepalLengthVirginica)
pwd
getwd()
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
y<-w*x
y
sum(y)/sum(w)
z<-(.0025,1.077,.3,.1471)
z<-c(.0025,1.077,.3,.1471)
for i in (1:4) {}
for (i in 1:4) {
u<-sum((x-z(i))^2*w)/sum(2)
print(u)
}
for (i in 1:4) {
u<-sum((x-z[i])^2*w)/sum(2)
print(u)
}
x
y
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
w<-c(-0.04462,#
0.59915,#
0.8263,#
-1.713 )
w
for (i in 1:4){}
for (i in 1:4){
for (j in 1:length(y)){
}
for (i in 1:4) {
z<-y-w[i]*x
z<-z^2
SSE[i]<-sum(z)
}
SSE<-numeric(4)
for (i in 1:4) {
z<-y-w[i]*x#
z<-z^2#
SSE[i]<-sum(z)#
}
SSE
ls()
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
x1<-x-mean(x)
x1
x2<-sd(x)
normx<-x1/x2
normx
sd(normx)
mean(normx)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(y~x))
x
mean(x)
trials<-c(0.573,0.8,0.36,0.44 )
for (i in 1:4){
SSE<-sum((x-trials[i])^2)
SSE
}
trials<-c(0.573,0.8,0.36,0.44 )#
> for (i in 1:4){#
+ SSE<-sum((x-trials[i])^2)#
+ print(SSE)#
+ }
for (i in 1:4){
Errors<-x-trials[i]
print(Errors)
}
for (i in 1:4){
Errors<-x-trials[i]
SqErrors<-Errors*Errors
print(SqErrors)
}
for (i in 1:4){
Errors<-x-trials[i]
SqErrors<-Errors*Errors
SSE<-sum(SqErrors)
print(SSE)
}
library(swirl)
swirl()
install_from_swirl("Regression Models")
swirl()
install_from_swirl("Regression Models")
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent,galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
regrline <- lm(child ~ parent, galton)
summary(regrline)
fit<-lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic<-fit$coef[1]
ols.slope<-fit$coef[2]
lhs-rhs
all.equal(lhs,rhs)
var(galton$child)
varChild <- var(galton$child)
varRes<-var(fit$residuals)
varEst<-var(est(galton$parent))
varEst<-var(est(ols.slope,ols.ic,galton$parent))
varEst<-var(est(ols.slope,ols.ic))
all.equal(varChild,sum(varRes,varEst))
all.equal(varChild,varEst+varRes)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals,attenu$mag)
cov(efit$residuals,attenu$dist)
library(swirl)
rm(list=ls())
swirl()
lm(galton$parent,galton$child)
ls
ls()
lm(data=galton,formula=child~parent)
fit<-lm(formula = child ~ parent, data = galton)
summary(fit)
sum((fit$residuals)^2)
swirl()
cor(gpa_nor,gch_nor)
l_nor<-lm(gch_nor~gpa_nor)
#plot the original Galton data points with larger dots for more freq pts#
y <- galton$child#
x <- galton$parent#
freqData <- as.data.frame(table(galton$child, galton$parent))#
names(freqData) <- c("child", "parent", "freq")#
plot(as.numeric(as.vector(freqData$parent)), #
     as.numeric(as.vector(freqData$child)), #
     pch = 21, col = "black", bg = "lightblue",#
     cex = .07 * freqData$freq, xlab = "parent", ylab = "child")#
#
#original regression line, children as outcome, parents as predictor#
abline(mean(y) - mean(x) * cor(y, x) * sd(y) / sd(x), #intercept#
       sd(y) / sd(x) * cor(y, x),  #slope#
       lwd = 3, col = "red")#
#
#new regression line, parents as outcome, children as predictor#
abline(mean(y) - mean(x) * sd(y) / sd(x) / cor(y, x), #intercept#
       sd(y) / cor(y, x) / sd(x), #slope#
       lwd = 3, col = "blue")#
#
#assume correlation is 1 so slope is ratio of std deviations#
abline(mean(y) - mean(x) * sd(y) / sd(x), #intercept#
       sd(y) / sd(x),  #slope#
       lwd = 2)#
points(mean(x), mean(y), cex = 2, pch = 19) #big point of intersection
swirl()
fit<-lm(child ~ parent,galton)
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu<-mean(galton$child)
sTot<-sum((galton$child-mu)^2)
deviance(fit)
"sRes <- deviance(fit)"
sRes <- deviance(fit)
1-sRes/sTot
summary(fit)$r.squared
(cor(galton$child,galton$parent))^2
cor(galton$child,galton$parent)^2
ones<-rep(1,nrow(galton))
lm(child ~ ones + parent -1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
head(trees)
fit<-lm(Volume~Girth+Height+Constant -1,trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
list.files(full.names=TRUE)
library(knitr)
knit2html("./PA1_template.Rmd")
